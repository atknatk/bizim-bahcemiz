@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;
@using Nop.Web.Framework;

<div class="add-to-cart-wrapper">
    @if (Model.UpdatedShoppingCartItemId > 0)
    {
        @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
    }
    @if (Model.CustomerEntersPrice)
    {
        <div class="bs-customer-entered-price">
            <div class="price-input form-group">
                <div class="paddding-right0">
                    @Html.LabelFor(model => model.CustomerEnteredPrice, new { @class = "enter-price-label" })
                    @*round price*@
                </div>
                <div class="paddding-left0">
                    @Html.TextBox("CustomerEnteredPrice", Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice)), new { @class = "enter-price-input, form-control" })
                </div>
            </div>
            <div class="price-range form-group">
                <div class="text-info">
                    <strong>@Model.CustomerEnteredPriceRange</strong>
                </div>
            </div>
        </div>
    }
    @if (!Model.DisableBuyButton || !Model.DisableWishlistButton)
    {

        @if (!Model.DisableBuyButton)
        {   
        
            <div class="quantity row">
               
                
                @if (Model.AllowedQuantities.Count > 0)
                {
                    @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty-dropdown form-control" })
                }
                else
                {
                      <div class="col w-100">
                           <input asp-for="EnteredQuantity" class="qty-input form-control w-100" type="number" placeholder="QTY" />
                       </div>
                   
                    <script type="text/javascript">
                    $(document).ready(function () {
                        @*$("#@Html.IdFor(x => x.EnteredQuantity)").inputmask('Regex', {
                            regex: '^[0-9]+$'
                        });*@
                    });
                    </script>
                    //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                    if (!Model.DisableBuyButton)
                    {
                        <script type="text/javascript" asp-location="Footer">
                            $(document).ready(function () {
                                $("#@Html.IdFor(model => model.EnteredQuantity)").keydown(function (event) {
                                    if (event.keyCode == 13) {
                                        $("#add-to-cart-button-@Model.ProductId").click();
                                        return false;
                                    }
                                });
                            });
                        </script>
                    }
                }
            </div>
        }

        <div class="row justify-content-between">
            @if (!Model.DisableBuyButton)
            {
                <div class="add-to-cart col pr-1">
                    @{
                        var addToCartText = "";
                        if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                        {
                            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                        }
                        else
                        {
                            addToCartText = T("ShoppingCart.AddToCart").Text;
                            if (Model.IsRental)
                            {
                                addToCartText = T("ShoppingCart.Rent").Text;
                            }
                            if (Model.AvailableForPreOrder)
                            {
                                addToCartText = T("ShoppingCart.PreOrder").Text;
                            }
                        }
                    }
                    <a id="add-to-cart-button-@Model.ProductId" class="add-to-cart-button-quick-view pull-left" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;">
                       <i class="icon-cart pr-2" aria-hidden="true"></i> 
                       @addToCartText
                        @*@T("QuickVewConfirmedToCart")*@
                    </a>
                </div>
            }

            @if (!Model.DisableWishlistButton && Model.UpdatedShoppingCartItemId == 0)
            {
                <div class="add-to-wishlist col pl-1">
                    <a id="add-to-wishlist-button-@Model.ProductId"class="pull-right wishlist-icon" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.Wishlist })', '#product-details-form');return false;">
                       <i class="fa fa-heart-o pr-2" aria-hidden="true"></i>
                        @T("ShoppingCart.AddToWishlist")
                    </a>
                </div>
            }
        </div>
    }
    @*@Html.Widget("productdetails_add_info")*@
</div>


