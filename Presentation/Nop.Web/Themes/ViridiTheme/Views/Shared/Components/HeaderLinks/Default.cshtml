@model HeaderLinksModel
@using System.Text.Encodings.Web
<div class="header-links">
    <ul>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore })
        @if (Model.IsAuthenticated)
        {
            <li class="nav-item dropdown">
                <a class="nav-link icon-user dropdown-toggle" href="#" role="button" id="account_toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @*@T("Account.UserAccount")*@ 
                </a>
                <div class="dropdown-menu dropdown-menu-right">
                    <div class="nav-item"><a href="@Url.RouteUrl("CustomerInfo")" class="ico-account nav-link">@T("Account.MyAccount")</a></div>
                    <div class="nav-item"><a href="@Url.RouteUrl("Logout")" class="ico-logout nav-link">@T("Account.Logout")</a></div>
                </div>
            </li>
        }
        else
        {
            <li class="nav-item dropdown">
                <a class="nav-link icon-user dropdown-toggle" href="#" role="button" id="account_toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> @*@T("Account.UserAccount")*@ </a>
                <div class="dropdown-menu" id="">
                    <div class="nav-item"><a href="@Url.RouteUrl("Register")" class="ico-register nav-link">@T("Account.Register")</a></div>
                    <div class="nav-item"><a href="@Url.RouteUrl("Login")" class="ico-login nav-link">@T("Account.Login")</a></div>
                </div>
            </li>
        }
        @if (Model.AllowPrivateMessages)
        {
            <li>
                <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                    <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                    <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
                </a>
            </li>
        }
        @if (Model.WishlistEnabled)
        {
            <li class="nav-item">
                <a href="@Url.RouteUrl("Wishlist")" class="nav-link py-0">
                    <span class="wishlist-label icon-heart">@T("Wishlist")</span>
                    <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                </a>
            </li>
        }

        @if (Model.ShoppingCartEnabled)
        {
            <li class="nav-item dropdown" id="topcartlink">
                <a href="@Url.RouteUrl("ShoppingCart")" class="nav-link">
                    <span class="cart-label icon-cart-1">@T("ShoppingCart")</span>
                    <span class="cart-qty"> @T("ShoppingCart.HeaderQuantity", Model.ShoppingCartItems) </span>
                </a>
                <div class="dropdown-menu dropdown-cart">
                    @await Component.InvokeAsync("FlyoutShoppingCart")
                </div>
            </li>
        }

        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter })
    </ul>
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
    @if (Model.ShoppingCartEnabled)
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                $('.header').on('mouseenter', '#topcartlink', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#topcartlink', function () {
                    $('#flyout-cart').removeClass('active');
                });
                $('.header').on('mouseenter', '#flyout-cart', function () {
                    $('#flyout-cart').addClass('active');
                });
                $('.header').on('mouseleave', '#flyout-cart', function () {
                    $('#flyout-cart').removeClass('active');
                });


                $('.mobile-menu .sublist').addClass("collapse")
                $('.mobile-menu .sublist-toggle').on('click', function (e) {
                    $(this).siblings(".sublist").collapse('toggle');
                    e.stopPropagation();
                })
                $('.navbar-collapse').on('click', function (e) {
                    e.stopPropagation();
                });
                $('.navbar-toggler').on('click', function (e) {
                    $('#collapsibleNavbar').toggleClass('show');
                    e.stopPropagation();
                })
                $('html,body').on('click', function (e) {
                    $('.navbar-collapse, .mobile-menu .sublist').removeClass('show')
                })
            });
        </script>
    }
</div>
